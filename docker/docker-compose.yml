version: "3.8"
services:
  jupytercode:
    build: 
      context: .
      args:
        - CODE_VERSION=4.92.1
        - PLATFORM=arm64
    image: jupytercode:latest
    user: root
    environment:
      - GRANT_SUDO=yes
    ports:
      - 8888:8888
    volumes:
      - jupytercode:/home/jovyan
  #
  minio:
    image: minio/minio
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio1234
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
  
  
  mqtt-nanomq:
    image: emqx/nanomq
    ports:
      - 1884:1883
      - 8084:8083
      - 8884:8883

  mqtt-mosquitto:
    image: eclipse-mosquitto
    ports:
      - 1883:1883
      - 8083:8083
      - 8883:8883

  redis:
    image: valkey/valkey
    ports:
      - 6379:6379

  dragonfly:
    image: docker.dragonflydb.io/dragonflydb/dragonfly
  #   ulimits:
  #     memlock: -1
    ports:
      - 6380:6379
  
  mongodb:
    image: mongo
    ports:
      - 27017:27017

  nodered:
    image: nodered/node-red
    volumes:
      - nodered:/data
    ports: 
      - 1880:1880
  
  postgres:
    image: postgres
    environment:
      - POSTGRES_USER=flowerpower
      - POSTGRES_PASSWORD=secret_password
      - POSTGRES_DB=flowerpower
    ports:
      - 5432:5432

  postgres-hamilton:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=hamilton
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - PGPORT=5433
    ports:
      - 5433:5433
  backend:
    container_name: hamilton-ui-backend
    image: dagworks/ui-backend:latest
    #build:
    #    context: backend
    #    dockerfile: Dockerfile.backend
    entrypoint: [ "/bin/bash", "-c", "cd /code/server && ls && ./entrypoint.sh" ]
    volumes:
      #- ./backend:/code
      - /data/hamilton_ui:/data/
    ports:
      - 8241:8241
    #env_file: .env
    environment:
      - DB_HOST=postgres-hamilton
      - DB_PORT=5433
      - DB_NAME=flowerpower
      - DB_USER=postgres
      - DB_PASSWORD=password # Purely for local! Do not deploy to production!
      - HAMILTON_BLOB_STORE=local
      - HAMILTON_ENV=local # local env
      - HAMILTON_LOCAL_BLOB_DIR=/data/blobs # TODO -- set this up to be a better one
      - DJANGO_SECRET_KEY=do_not_use_in_production
      - HAMILTON_TELEMETRY_ENABLED=false #${HAMILTON_TELEMETRY_ENABLED}
      - HAMILTON_AUTH_MODE=permissive
      - HAMILTON_ALLOWED_HOSTS=*
      - HAMILTON_CAPTURE_DATA_STATISTICS=false
      - HAMILTON_MAX_LIST_LENGTH_CAPTURE
      - HAMILTON_MAX_DICT_LENGTH_CAPTURE

    restart: unless-stopped

  frontend:
    container_name: hamilton-ui-frontend
    image: dagworks/ui-frontend:latest
    #build:
    #  context: frontend
    #  dockerfile: Dockerfile.frontend
    #  args:
    #    - REACT_APP_AUTH_MODE=local
    #    - REACT_APP_USE_POSTHOG=false
    #volumes:
      # - ./frontend:/usr/src/app
      # - /usr/src/app/node_modules
    ports:
      - 8242:8242
    environment:
      - NGINX_PORT=8242
      - NODE_ENV=development
      - REACT_APP_AUTH_MODE=local
      - REACT_APP_USE_POSTHOG=false
      - REACT_APP_API_URL=http://backend:8241
    depends_on:
      - backend

    restart: unless-stopped

volumes:
  jupytercode:
  minio_data:
  #minio_config:
  nodered:
  postgres_data:
  backend_data:
