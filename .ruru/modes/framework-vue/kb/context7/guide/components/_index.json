[
  {
    "fileName": "v-model.md",
    "pageTitle": "Component v-model in Vue.js",
    "snippetTitles": [
      "Two-way data binding with defineModel() in Vue Component",
      "v-model on custom component",
      "v-model Modifier Handling (Composition API)",
      "Two-way data binding with native input element",
      "defineModel with Arguments and Options",
      "Defining prop options for defineModel",
      "v-model with Arguments Options API",
      "Binding a v-model to a Vue Component",
      "Custom Input Component",
      "Multiple v-model Bindings (Composition API)",
      "defineModel with Arguments",
      "Props and Emits Declaration for v-model with Modifiers (Options API)",
      "Native Input using v-model",
      "Custom Input with Computed Property",
      "v-model Modifier Handling (Options API)",
      "v-model Modifier Handling (Composition API - Pre 3.4)",
      "Implementing v-model pre-Vue 3.4",
      "Multiple v-model Bindings (Composition API - Pre 3.4)",
      "Multiple v-model Bindings with Different Arguments and Modifiers in Vue",
      "Accessing v-model Modifiers (Pre 3.4 Composition API)",
      "Parent component binding v-model attributes",
      "v-model Binding with Argument and Modifier in Vue",
      "v-model with Arguments",
      "Native Input v-model Expanded"
    ]
  },
  {
    "fileName": "props.md",
    "pageTitle": "Vue.js Component Props Declaration and Usage",
    "snippetTitles": [
      "Defining Boolean Prop (Options API)",
      "Nullable Type Prop (Options API)",
      "Prop Validation (Options API)",
      "Declaring Props with Type Validation (Options API)",
      "Declaring Props with the `props` option (Composition API)",
      "Reactive Props Destructure Example with watchEffect",
      "Using Boolean Prop in Template",
      "Declaring Props with Type Validation (Composition API)",
      "Prop Name Casing in props option (Options API)",
      "Using Prop as Initial Data (Composition API)",
      "Prop Validation (Composition API)",
      "Defining Boolean Prop (Composition API)",
      "Transforming Prop with Computed Property (Composition API)",
      "Reactive Props Destructure with Default Value",
      "Declaring Props with defineProps in Vue SFCs",
      "Using Custom Class as Prop Type (Composition API)",
      "Post Object Example (Composition API)",
      "Multiple Type Boolean Prop (Composition API)",
      "Multiple Type Boolean Prop (Options API)",
      "Nullable Type Prop (Composition API)",
      "Using Prop as Initial Data (Options API)",
      "Declaring Props with the `props` option (Options API)",
      "Transforming Prop with Computed Property (Options API)",
      "Declaring Props using Type Annotations in Vue SFCs with TypeScript",
      "Prop Name Casing in defineProps (Composition API)",
      "Data Option Example (Options API)",
      "Mutating Prop (Options API)"
    ]
  },
  {
    "fileName": "slots.md",
    "pageTitle": "Vue.js Component Slots",
    "snippetTitles": [
      "Using a Component with Slots Vue.js",
      "BaseLayout Template with Named Slots (Vue)",
      "Passing Content to Named Slots (Vue)",
      "Passing Complex Slot Content Vue.js",
      "Using a Component with Fallback Content Vue.js",
      "Using Named Scoped Slots in Vue.js",
      "Passing Props to Named Scoped Slots in Vue.js",
      "Using Scoped Slots in FancyList Component",
      "Dynamic Slot Names (Vue)",
      "Receiving Scoped Slot Props (Vue)",
      "Rendered HTML with Named Slots",
      "Defining a Component with Slots Vue.js",
      "Overriding Fallback Content with Slots Vue.js",
      "Passing Content to Named Slots (Vue) - Implicit Default",
      "Card Component with Conditional Slots (Vue)",
      "Correct Usage of Default Scoped Slot with Template",
      "Rendered HTML with Slots Vue.js",
      "Destructuring Scoped Slot Props (Vue)",
      "Rendering Scoped Slots in FancyList Component",
      "Passing Props to a Scoped Slot (Vue)",
      "Defining Fallback Content for Slots Vue.js",
      "JavaScript Analogy for Named Slots",
      "Rendered HTML with Fallback Content Vue.js",
      "Rendered HTML with Overridden Slot Content Vue.js"
    ]
  },
  {
    "fileName": "events.md",
    "pageTitle": "Vue.js Component Events",
    "snippetTitles": [
      "Declaring Emitted Events using defineEmits Vue",
      "Emitting events with defineEmits in Composition API Vue",
      "Declaring Emitted Events with Type Annotations (Composition API) TypeScript",
      "Handling Event Arguments in Composition API Vue JavaScript",
      "Listening to Events with .once Modifier Vue HTML",
      "Listening to Events in Parent Component Vue HTML",
      "Validating Emitted Events (Options API) JavaScript",
      "Declaring Emitted Events with Payload Type (Options API) JavaScript",
      "Emitting Events in Options API Vue JavaScript",
      "Validating Emitted Events (Composition API) Vue",
      "Listening to Event Arguments with Inline Arrow Function Vue HTML",
      "Listening to Event Arguments with Method Vue HTML",
      "Handling Event Arguments in Options API Vue JavaScript",
      "Emitting events using setup context in Options API JavaScript",
      "Declaring Emitted Events with Payload Type (Composition API) TypeScript",
      "Destructuring emit from setup context in Options API JavaScript",
      "Declaring Emitted Events using emits Option JavaScript",
      "Import onMounted and Handle Hash Redirects Vue"
    ]
  },
  {
    "fileName": "provide-inject.md",
    "pageTitle": "Vue.js Provide / Inject",
    "snippetTitles": [
      "Providing with Symbol Key (Composition API)",
      "Defining Symbol Injection Key (JavaScript)",
      "Provide Reactive Value in Vue.js",
      "Providing Reactive Data in Vue (Composition API)",
      "Inject value using setup function in Vue.js",
      "Injection Default Values (Options API)",
      "Injecting Reactive Data in Vue (Composition API)",
      "Provide value using Composition API in Vue.js",
      "Providing Reactive Data with Computed Property (Options API)",
      "App-level Provide in Vue.js",
      "Injection Aliasing in Vue.js Options API",
      "Provide value using setup function in Vue.js",
      "Inject value using Composition API in Vue.js",
      "Provide per-instance state using Options API",
      "Providing Read-Only Data in Vue (Composition API)",
      "Providing with Symbol Key (Options API)",
      "Injection Default Value (Composition API)",
      "Provide value using Options API in Vue.js"
    ]
  },
  {
    "fileName": "async.md",
    "pageTitle": "Async Components in Vue.js",
    "snippetTitles": [
      "Async Component with Dynamic Import",
      "Async Component with Loading and Error States",
      "Globally Registering Async Component",
      "Locally Registering Async Component (Composition API)",
      "Async Component with Hydrate on Interaction",
      "Defining Basic Async Component",
      "Async Component with Hydrate on Idle",
      "Async Component with Hydrate on Visible",
      "Async Component with Custom Hydration Strategy"
    ]
  },
  {
    "fileName": "registration.md",
    "pageTitle": "Component Registration in Vue.js",
    "snippetTitles": [
      "Global Component Registration in Vue.js",
      "Local Component Registration in Vue.js (Options API)",
      "Local Component Usage in Vue.js with <script setup>",
      "Local Component Registration and Usage in Vue.js (Options API + Template)",
      "Using Globally Registered Components in Vue.js Template",
      "Chained Global Component Registration in Vue.js",
      "Global Component Registration with SFC in Vue.js"
    ]
  },
  {
    "fileName": "attrs.md",
    "pageTitle": "Vue.js Fallthrough Attributes Documentation",
    "snippetTitles": [
      "Binding Fallthrough Attributes with v-bind Vue HTML",
      "Accessing Fallthrough Attributes in Script Setup Vue",
      "Disabling Attribute Inheritance with defineOptions Vue",
      "Binding Fallthrough Attributes in Multi-Root Component Vue HTML",
      "Accessing Fallthrough Attributes in Template Vue HTML",
      "Using Component with Fallthrough Attribute Vue HTML",
      "Accessing Fallthrough Attributes in Options API Javascript"
    ]
  }
]